{"ast":null,"code":"import * as actionsTypes from \"./actionsTypes\";\nexport const traerTodas = data => ({\n  type: actionsTypes.TRAER_TODOS,\n  payload: data\n});\nexport const cargando = data => ({\n  type: actionsTypes.CARGANDO,\n  payload: data\n});\nexport const limpiar = data => ({\n  type: actionsTypes.LIMPIAR,\n  payload: data\n});\nexport const actualizarListado = data => ({\n  type: actionsTypes.ACTUALIZAR_LISTADO,\n  payload: data\n});\nexport const hacerFetch = user => {\n  return dispatch => {\n    fetch(`https://api.github.com/users/${user}/repos?sort=updated`).then(response => response.json()).then(response => {\n      //   console.log(\"response\", response);\n      dispatch(actualizarListado(response));\n    });\n  };\n};\nexport const hacerFetchUser = user => {\n  return dispatch => {\n    fetch(`https://api.github.com/users/${user}`).then(response => {\n      console.log(\"response\", response.status);\n\n      if (response.status === 404) {\n        return [undefined];\n      } else {\n        return response.json();\n      }\n    }).then(response => {\n      console.log(\"response\", response);\n      dispatch(actualizarUserInfo(response)); // if(response.message !== \"Not Found\"){\n      //     dispatch(actualizarUserInfo(response));\n      // }else{\n      //     dispatch(actualizarUserInfo([undefined]));\n      // }\n    });\n  };\n};\nexport const actualizarUserInfo = data => ({\n  type: actionsTypes.ACTUALIZAR_USER_INFO,\n  payload: data\n});","map":{"version":3,"sources":["/Users/paolarico/Documents/PAO/Aca/ConsultarRepos/src/actions/actions.js"],"names":["actionsTypes","traerTodas","data","type","TRAER_TODOS","payload","cargando","CARGANDO","limpiar","LIMPIAR","actualizarListado","ACTUALIZAR_LISTADO","hacerFetch","user","dispatch","fetch","then","response","json","hacerFetchUser","console","log","status","undefined","actualizarUserInfo","ACTUALIZAR_USER_INFO"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,KAAW;AACjCC,EAAAA,IAAI,EAAEH,YAAY,CAACI,WADc;AAEjCC,EAAAA,OAAO,EAAEH;AAFwB,CAAX,CAAnB;AAKP,OAAO,MAAMI,QAAQ,GAAIJ,IAAD,KAAW;AAC/BC,EAAAA,IAAI,EAAEH,YAAY,CAACO,QADY;AAE/BF,EAAAA,OAAO,EAAEH;AAFsB,CAAX,CAAjB;AAKP,OAAO,MAAMM,OAAO,GAAIN,IAAD,KAAW;AAC9BC,EAAAA,IAAI,EAAEH,YAAY,CAACS,OADW;AAE9BJ,EAAAA,OAAO,EAAEH;AAFqB,CAAX,CAAhB;AAKP,OAAO,MAAMQ,iBAAiB,GAAIR,IAAD,KAAW;AACxCC,EAAAA,IAAI,EAAEH,YAAY,CAACW,kBADqB;AAExCN,EAAAA,OAAO,EAAEH;AAF+B,CAAX,CAA1B;AAKP,OAAO,MAAMU,UAAU,GAAIC,IAAD,IAAS;AAC/B,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,gCAA+BF,IAAK,qBAAtC,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ,IAAI;AAClB;AAEEH,MAAAA,QAAQ,CAACJ,iBAAiB,CAACO,QAAD,CAAlB,CAAR;AAED,KAPH;AAQD,GATD;AAUD,CAXI;AAaP,OAAO,MAAME,cAAc,GAAIN,IAAD,IAAS;AACnC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,gCAA+BF,IAAK,EAAtC,CAAL,CACGG,IADH,CACQC,QAAQ,IACV;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAQ,CAACK,MAAjC;;AACA,UAAGL,QAAQ,CAACK,MAAT,KAAoB,GAAvB,EAA2B;AACvB,eAAO,CAACC,SAAD,CAAP;AACH,OAFD,MAEK;AACD,eAAON,QAAQ,CAACC,IAAT,EAAP;AAAuB;AAC1B,KARX,EAUGF,IAVH,CAUQC,QAAQ,IAAI;AACbG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACAH,MAAAA,QAAQ,CAACU,kBAAkB,CAACP,QAAD,CAAnB,CAAR,CAFa,CAGd;AACA;AACA;AAEA;AACA;AAGH,KArBH;AAsBD,GAvBD;AAwBH,CAzBM;AA0BL,OAAO,MAAMO,kBAAkB,GAAItB,IAAD,KAAW;AAC3CC,EAAAA,IAAI,EAAEH,YAAY,CAACyB,oBADwB;AAE3CpB,EAAAA,OAAO,EAAEH;AAFkC,CAAX,CAA3B","sourcesContent":["import * as actionsTypes from \"./actionsTypes\";\n\nexport const traerTodas = (data) => ({\n    type: actionsTypes.TRAER_TODOS,\n    payload: data\n})\n\nexport const cargando = (data) => ({\n    type: actionsTypes.CARGANDO,\n    payload: data\n})\n\nexport const limpiar = (data) => ({\n    type: actionsTypes.LIMPIAR,\n    payload: data\n})\n\nexport const actualizarListado = (data) => ({\n    type: actionsTypes.ACTUALIZAR_LISTADO,\n    payload: data\n})\n\nexport const hacerFetch = (user) =>{\n    return dispatch => {\n      fetch(`https://api.github.com/users/${user}/repos?sort=updated`)\n        .then(response => response.json())\n        .then(response => {\n        //   console.log(\"response\", response);\n         \n          dispatch(actualizarListado(response));\n         \n        });\n    };\n  }\n\nexport const hacerFetchUser = (user) =>{\n    return dispatch => {\n      fetch(`https://api.github.com/users/${user}`)\n        .then(response =>\n            {\n                console.log(\"response\", response.status)\n                if(response.status === 404){\n                    return [undefined]\n                }else{\n                    return response.json()}\n                }\n        )\n        .then(response => {\n             console.log(\"response\", response); \n             dispatch(actualizarUserInfo(response))\n            // if(response.message !== \"Not Found\"){\n            //     dispatch(actualizarUserInfo(response));\n            // }else{\n                \n            //     dispatch(actualizarUserInfo([undefined]));\n            // }\n         \n         \n        });\n    };\n}\n  export const actualizarUserInfo = (data) => ({\n    type: actionsTypes.ACTUALIZAR_USER_INFO,\n    payload: data\n})"]},"metadata":{},"sourceType":"module"}